package day3;

public class Person {
	// Field
	String name;
	// 참조 변수로 선언을 하면서 기본값을 null로 만들어준다. 아니면, 0이 기본값이라 계산에 사용돼 원하지 않는 값이 나올 수 있다.
	Integer age;
	// 실행시킬 수 있는 함수  --> 메소드
	static int index = 0;
	
	public void print() {
		System.out.println(toString());
	}
	
	
// Constructor (생성자)
//	public Person() {
//		name = "김자바";
//		age = 1;
// 기본적으로 class를 만들면 아래와 같은 기본 생성자가 만들어진다. 하지만 숨겨져있다. (non argument constructor)
	public Person() {
	}
	
	// 생성자 overload
	public Person(String name, Integer age) {
		// this : 나 자신
		this.name = name;
		this.age = age;
	}


	public Person (String name) {
		this.name = name;
	}

	// 재정의	
	@Override
	public String toString() {
		return "Person [name=" + name + ", age=" + age + "]";
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((age == null) ? 0 : age.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Person other = (Person) obj;
		if (age == null) {
			if (other.age != null)
				return false;
		} else if (!age.equals(other.age))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}
	
}
